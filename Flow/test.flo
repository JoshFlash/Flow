import System;
import Math;

module Program {
  const l:int = 11;
  var m:int = 42;

  let Main(args:array[string]) = {
    const n:int = 100;
    var primes:array[bool] = array[bool](n + 1);
    
    for i in 2 -> n {
      primes[i] = true;
    }
    for i in 2 -> n where i * i < n {
      if primes[i] is true {
        var j:int = i * i;
        while (j < n) {
          primes[j] = false;
          j = j + i;
        }
      }
    }
    for i in 2 -> n where primes[i] {
      Print(i.string);
    }
    
    if not (l > 10 and n / (2 + l) < 10) {
      Print("The condition is true");
    }
    
    TestFunction("Hello", 42, true);
    TestNoParams();
  }
  
  let TestFunction(str: string, num: int, flag: bool) = {
    Print("String: " + str);
    Print("Number: " + num.string);
    Print("Flag: " + flag.string);
  }
  
  let TestNoParams() = {
    if (l is not m) {
      Print("l and m are not equal");
    }
  }
}

  
# todo

  let IsEven (x:int) : bool = {
    x mod 2 is 0
  }

  let IsOdd (x:int) : bool = { IsEven(x) is not true }

  const testTwenty:bool = IsEven(20);
  const testNineteen = IsEven(19);
  const nullTest:Any = None;
  var defaultTest:bool;
  var zero = 0;
  if testNineteen is testTwenty {
    Print("how??!");
  }
  
  let GenericAdd<T>(T a, T b) : T = {
    a + b
  }
#