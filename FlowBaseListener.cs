//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Flow.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFlowListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class FlowBaseListener : IFlowListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] FlowParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] FlowParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.module_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_declaration([NotNull] FlowParser.Module_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.module_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_declaration([NotNull] FlowParser.Module_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] FlowParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] FlowParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declaration([NotNull] FlowParser.Variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declaration([NotNull] FlowParser.Variable_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.variable_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_value([NotNull] FlowParser.Variable_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.variable_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_value([NotNull] FlowParser.Variable_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] FlowParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] FlowParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.generic_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneric_type([NotNull] FlowParser.Generic_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.generic_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneric_type([NotNull] FlowParser.Generic_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_list([NotNull] FlowParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_list([NotNull] FlowParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter([NotNull] FlowParser.Type_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter([NotNull] FlowParser.Type_parameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_statement([NotNull] FlowParser.Assignment_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_statement([NotNull] FlowParser.Assignment_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.print_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_statement([NotNull] FlowParser.Print_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.print_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_statement([NotNull] FlowParser.Print_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] FlowParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] FlowParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_statement([NotNull] FlowParser.While_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_statement([NotNull] FlowParser.While_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_statement([NotNull] FlowParser.For_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_statement([NotNull] FlowParser.For_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.range_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange_clause([NotNull] FlowParser.Range_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.range_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange_clause([NotNull] FlowParser.Range_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] FlowParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] FlowParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.function_call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call_statement([NotNull] FlowParser.Function_call_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.function_call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call_statement([NotNull] FlowParser.Function_call_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] FlowParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] FlowParser.Argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.statement_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_block([NotNull] FlowParser.Statement_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.statement_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_block([NotNull] FlowParser.Statement_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.expression_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_value([NotNull] FlowParser.Expression_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.expression_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_value([NotNull] FlowParser.Expression_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] FlowParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] FlowParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.multiplicative_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_operation([NotNull] FlowParser.Multiplicative_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.multiplicative_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_operation([NotNull] FlowParser.Multiplicative_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.additive_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_operation([NotNull] FlowParser.Additive_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.additive_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_operation([NotNull] FlowParser.Additive_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.relational_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_operation([NotNull] FlowParser.Relational_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.relational_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_operation([NotNull] FlowParser.Relational_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.equality_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_operation([NotNull] FlowParser.Equality_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.equality_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_operation([NotNull] FlowParser.Equality_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.logical_and_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_and_operation([NotNull] FlowParser.Logical_and_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.logical_and_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_and_operation([NotNull] FlowParser.Logical_and_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.logical_or_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_or_operation([NotNull] FlowParser.Logical_or_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.logical_or_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_or_operation([NotNull] FlowParser.Logical_or_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] FlowParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] FlowParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operation([NotNull] FlowParser.Unary_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operation([NotNull] FlowParser.Unary_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.binary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_operation([NotNull] FlowParser.Binary_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.binary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_operation([NotNull] FlowParser.Binary_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.function_call_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call_expression([NotNull] FlowParser.Function_call_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.function_call_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call_expression([NotNull] FlowParser.Function_call_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlowParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] FlowParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlowParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] FlowParser.IdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
